server: 
  port: 8090
  
spring:
  profiles:
    active: dev
  thymeleaf:
    # 关闭 Thymeleaf 的缓存开发过程中无需重启
    cache: false
    # 设置thymeleaf页面的编码
    encoding: UTF-8
    mode: HTML
    # 设置thymeleaf页面的后缀
    suffix: .html
    # 设置thymeleaf页面的存储路径
    prefix: classpath:/dist/
  # 静态文件请求匹配方式
  mvc:
    static-path-pattern: /**
  # 修改默认的静态寻址资源目录 多个使用逗号分隔
  resources:
    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/dist/
  quartz:
    # 持久化到数据库
    job-store-type: jdbc
    # 相关属性配置
    properties:
      org:
        quartz:
          scheduler:
            # 调度器实例名称
            instanceName: clusteredScheduler
            # 调度器编号自动生成，集群中编号不可以重复，所以最好设成auto
            instanceId: AUTO
            skipUpdateCheck: true
            wrapJobExecutionInUserTransaction: false
          jobStore:
            misfireThreshold: 60000
            acquireTriggersWithinLock: true
            # 持久化方式配置
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            # 持久化方式配置数据驱动，MySQL数据库，支持集群
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            # quartz相关数据表前缀名
            tablePrefix: QRTZ_
            # 开启分布式部署
            isClustered: true
            # 分布式节点有效性检查时间间隔，单位：毫秒
            clusterCheckinInterval: 10000
            # 配置是否使用,防止数据库出现blob等字段时可能会出现问题
            useProperties: true
          threadPool:
            # 线程池实现类
            class: org.quartz.simpl.SimpleThreadPool
            # 执行最大并发线程数量
            threadCount: 100
            # 线程优先级
            threadPriority: 5
            # 配置是否启动自动加载数据库内的定时任务，默认true
            threadsInheritContextClassLoaderOfInitializingThread: true
    # 初始化表结构.初次使用的时候会在库中生成表格,后期注释掉即可.或者初始使用值为 always,然后将值改为 never
    jdbc:
      initialize-schema: never
    # 每次启动后都会覆盖之前的job信息，默认false,这时配置的cron expression 不会同步到数据库
    overwrite-existing-jobs: true
    auto-startup: true
    wait-for-jobs-to-complete-on-shutdown: true
    scheduler-name: quartzScheduler
    startup-delay: 10

#数据库配置
  datasource:
    master:
      url: jdbc:mysql://192.168.174.104:3306/spring-cloud-alibaba?useUnicode=true&serverTimezone=GMT%2B8&characterEncoding=utf-8
      username: root
      password: root
      name: master
      type: com.alibaba.druid.pool.DruidDataSource
      druid:
        #初始化大小、最小、最大
        initial-size: 5
        min-idle: 5
        max-active: 20
        #配置获取连接等待超时的时间
        max-wait: 60000
        #配置间隔多久才进行一次检测，检测需要关闭空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        validation-query: SELECT 1 FROM DUAL
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        #打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: true
        #配置监控统计拦截的filters，去掉后监控界面sql无法统计，“wall”用于防火墙
        max-pool-prepared-statement-per-connection-size: 20
        filters: stat,wall,log4j
        # 合并多个DruidDataSource的监控数据
        use-global-data-source-stat: true
        #通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    slave:
      url: jdbc:mysql://192.168.174.104:3306/jaray-schedule-quartz?useUnicode=true&serverTimezone=GMT%2B8&characterEncoding=utf-8
      username: root
      password: root
      name: slave
      type: com.alibaba.druid.pool.DruidDataSource
      druid:
        #初始化大小、最小、最大
        initial-size: 5
        min-idle: 5
        max-active: 20
        #配置获取连接等待超时的时间
        max-wait: 60000
        #配置间隔多久才进行一次检测，检测需要关闭空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        validation-query: SELECT 1 FROM DUAL
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        #打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: true
        #配置监控统计拦截的filters，去掉后监控界面sql无法统计，“wall”用于防火墙
        max-pool-prepared-statement-per-connection-size: 20
        filters: stat,wall,log4j
        # 合并多个DruidDataSource的监控数据
        use-global-data-source-stat: true
        #通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 配置监控服务器
        stat-view-servlet:
          enabled: true
          login-username: admin
          login-password: admin_pwd
          reset-enable: false
          url-pattern: /druid/*
          # 添加IP白名单
          allow: 127.0.0.1
          # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
          #deny:
        web-stat-filter:
          enabled: true
          # 添加过滤规则
          url-pattern: /*
          # 忽略过滤格式
          exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
          session-stat-max-count: 1000
          session-stat-enable: true
          profile-enable: true
  session:
    store-type: redis
    timeout: 1000
    redis:
      flush-mode: ON_SAVE
      namespace: session
  redis:
    host: 127.0.0.1
    password:
    port: 6379
    # 链接超时时间（毫秒）
    timeout: 10000
    # 如果使用的jedis 则将lettuce改成jedis即可
    lettuce:
      pool: 
        max-active: 8 # 最大活跃链接数 默认8
        max-idle: 8 # 最大空闲连接数 默认8
        min-idle: 0 # 最小空闲连接数 默认0
        max-wait: 10000 # 连接池最大阻塞等待时间（使用负值表示无限制）
        time-between-eviction-runs: 100000 #每ms运行一次空闲连接回收器（独立线程）

swagger: 
  enabled: true

#mybatis配置
mybatis:
  type-aliases-package: com.vienna.jaray.entity.**,com.vienna.jaray.model.**
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/**/*.xml

# 配置sql打印日志
logging:
  level:
    com.vienna.jaray.mapper: debug
    
#图形验证码配置
kaptcha:
  height: 40
  width: 135
  content:
    length: 5
    source: 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
    space: 2
  font:
    color: blue
    name: 宋体,楷体,微软雅黑
    size: 40
  background-color:
    from: lightGray
    to: white
  border:
    enabled: true
    color: black
    thickness: 1

